/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarketPlace, MarketPlaceInterface } from "../MarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AlreadySold",
    type: "error",
  },
  {
    inputs: [],
    name: "BuyerMustNotBeSellor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NotApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ShouldNotApproved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ItemCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ItemSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "cancelItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdToItemId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "updateItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610e23380380610e2383398101604081905261002f91610060565b60016000553360805260a052600280546001600160a01b0319166001600160a01b039290921691909117905561009a565b6000806040838503121561007357600080fd5b82516001600160a01b038116811461008a57600080fd5b6020939093015192949293505050565b60805160a051610d576100cc600039600081816101a10152610bd601526000818160ff0152610b3c0152610d576000f3fe6080604052600436106100865760003560e01c8063883efa6711610059578063883efa671461014f5780639b6df3ed1461016f578063a001ecdd1461018f578063bfb231d2146101c3578063e7fb74c71461024f57600080fd5b806337f4be6b1461008b57806351563f8e146100cb57806365e17c9d146100ed5780636bfb0d0114610139575b600080fd5b34801561009757600080fd5b506100b86100a6366004610c34565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100d757600080fd5b506100eb6100e6366004610c34565b610262565b005b3480156100f957600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c2565b34801561014557600080fd5b506100b860015481565b34801561015b57600080fd5b506100eb61016a366004610c4d565b610470565b34801561017b57600080fd5b506100eb61018a366004610c4d565b610705565b34801561019b57600080fd5b506100b87f000000000000000000000000000000000000000000000000000000000000000081565b3480156101cf57600080fd5b5061021c6101de366004610c34565b60036020819052600091825260409091208054600182015460028301549290930154909291906001600160a01b03811690600160a01b900460ff1685565b604080519586526020860194909452928401919091526001600160a01b031660608301521515608082015260a0016100c2565b6100eb61025d366004610c34565b61086c565b6002546040516331a9108f60e11b81526004810183905282916000916001600160a01b0390911690636352211e9060240160206040518083038186803b1580156102ab57600080fd5b505afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190610c6f565b90506001600160a01b038116331461030e576040516330cd747160e01b815260040160405180910390fd5b6000838152600460205260409020548390806103455760405163068bb67560e51b8152600481018390526024015b60405180910390fd5b60025460405163020604bf60e21b8152600481018790526000916001600160a01b03169063081812fc9060240160206040518083038186803b15801561038a57600080fd5b505afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610c6f565b6001600160a01b0316146103ec57604051630cb5aa9b60e41b81526004810186905260240161033c565b60008581526004602081815260408084208054808652600380855283872087815560018101889055600281018890550180546001600160a81b03191690558a8652938352939093559151878152909182917ff35ca9ae7cb3bed040cf4b8897ac9834980ba4fc9faf4359d4429af971947669910160405180910390a2505050505050565b6002546040516331a9108f60e11b81526004810184905283916000916001600160a01b0390911690636352211e9060240160206040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610c6f565b90506001600160a01b038116331461051c576040516330cd747160e01b815260040160405180910390fd5b828061053b5760405163e1abbfc560e01b815260040160405180910390fd5b60025460405163020604bf60e21b815260048101879052869130916001600160a01b039091169063081812fc9060240160206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190610c6f565b6001600160a01b0316146105e5576040516319db8bf560e21b81526004810182905260240161033c565b600086815260046020526040902054801561061657604051637fbcdff960e01b81526004810188905260240161033c565b6001805490600061062683610cae565b9091555050600180546000898152600460209081526040808320849055805160a0810182528481528083018d81528183018d8152336060840181815260808501888152988852600396879052968590209351845591518389015551600283015593519201805494511515600160a01b026001600160a81b03199095166001600160a01b039390931692909217939093179055915490517f5bc1dfc7136db3113acb6dad2e291dcf149405ca07fcec667fa5e1fa7f430f98906106f4908b908b90918252602082015260400190565b60405180910390a350505050505050565b6002546040516331a9108f60e11b81526004810184905283916000916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561074e57600080fd5b505afa158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190610c6f565b90506001600160a01b03811633146107b1576040516330cd747160e01b815260040160405180910390fd5b6000848152600460205260409020548490806107e35760405163068bb67560e51b81526004810183905260240161033c565b84806108025760405163e1abbfc560e01b815260040160405180910390fd5b6000878152600460209081526040808320548084526003835292819020600281018a905581518b81529283018a905291339184917f605b85424b07ea668cc837a9d225c3696e3d22f4dc66432d40f39984bb21693e910160405180910390a3505050505050505050565b60008181526004602052604090205481908061089e5760405163068bb67560e51b81526004810183905260240161033c565b60025460405163020604bf60e21b815260048101859052849130916001600160a01b039091169063081812fc9060240160206040518083038186803b1580156108e657600080fd5b505afa1580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610c6f565b6001600160a01b031614610948576040516319db8bf560e21b81526004810182905260240161033c565b6002600054141561099b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161033c565b60026000818155858152600460209081526040808320548084526003909252909120918201549091903410156109f457600281015460405163bc03bccd60e01b815261033c918891600401918252602082015260400190565b6003810154600160a01b900460ff1615610a2457604051630ca0921760e31b81526004810187905260240161033c565b60038101546001600160a01b0316331415610a525760405163122d1d6d60e11b815260040160405180910390fd5b60025460038201546040516323b872dd60e01b81526001600160a01b039182166004820152336024820152604481018990529116906323b872dd90606401600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b50505060038201805460ff60a01b1916600160a01b179055506002810154600090610ae890610bcb565b60038301549091506001600160a01b03166108fc610b068334610cc9565b6040518115909202916000818181858888f19350505050158015610b2e573d6000803e3d6000fd5b506040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083906000818181858888f19350505050158015610b85573d6000803e3d6000fd5b50604051878152339084907fe71ee3b6ca4c2ed0f39e902d3099665a3d01b1ea580f31b1cf85bb0e75d0f6079060200160405180910390a3505060016000555050505050565b600080610c15610c037f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000610c1c565b610c0f856103e8610c1c565b90610c28565b9392505050565b6000610c158284610ce0565b6000610c158284610d02565b600060208284031215610c4657600080fd5b5035919050565b60008060408385031215610c6057600080fd5b50508035926020909101359150565b600060208284031215610c8157600080fd5b81516001600160a01b0381168114610c1557600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610cc257610cc2610c98565b5060010190565b600082821015610cdb57610cdb610c98565b500390565b600082610cfd57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610d1c57610d1c610c98565b50029056fea264697066735822122027b1558e7ca11f5ddb18b92714d809b7189b0b05d095cffa43f612e5e614612364736f6c63430008090033";

export class MarketPlace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    contractAddress: string,
    _feePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarketPlace> {
    return super.deploy(
      contractAddress,
      _feePercentage,
      overrides || {}
    ) as Promise<MarketPlace>;
  }
  getDeployTransaction(
    contractAddress: string,
    _feePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      contractAddress,
      _feePercentage,
      overrides || {}
    );
  }
  attach(address: string): MarketPlace {
    return super.attach(address) as MarketPlace;
  }
  connect(signer: Signer): MarketPlace__factory {
    return super.connect(signer) as MarketPlace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketPlaceInterface {
    return new utils.Interface(_abi) as MarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketPlace {
    return new Contract(address, _abi, signerOrProvider) as MarketPlace;
  }
}
